/*
*Phase 1 - Preprosessing 
*Raw reads -> Map to reference (BWA MEM) -> Mark duplicates (Picard) -> Base recallibration -> Analysis ready reads
*
*Phase 2 - Variant Discovery (Initial Variant Discovery) 
*Analysis ready reads -> Var. Calling (HC -ERC GCVF) -> Genotype likelihoods
*-> Joint Genotyping -> Raw variants: SNPs; Indels -> Filter Variants -> Analysis ready variants: SNPs; Indels
*
*Phase 3 - Callset refinement (Variant Annotation and Priotorization) 
*Analysis ready variants: SNPs; Indels -> Refine genotypes -> Annotate variants -> Evaluate callset -> Look good? troubleshoot or use in project
*/

#!/usr/bin/env nextflow
 
params.in = "$baseDir/data/sample.fa"
sequences = file(params.in)
 
/*
 * Map to reference (BWA MEM)
 */
process maptoref {
 
    input:
 
    output: 6484_snippet_fastqtosam.bam
 
    """
    java -Xmx8G -jar picard.jar FastqToSam \
    FASTQ=6484_snippet_1.fastq \ #first read file of pair
    FASTQ2=6484_snippet_2.fastq \ #second read file of pair
    OUTPUT=6484_snippet_fastqtosam.bam \
    READ_GROUP_NAME=H0164.2 \ #required; changed from default of A
    SAMPLE_NAME=NA12878 \ #required
    LIBRARY_NAME=Solexa-272222 \ #required 
    PLATFORM_UNIT=H0164ALXX140820.2 \ 
    PLATFORM=illumina \ #recommended
    SEQUENCING_CENTER=BI \ 
    RUN_DATE=2014-08-20T00:00:00-0400
    """
 
}
 
/*
 * Mark duplicates
 */
process markdup {
 
    input: 6484_snippet_fastqtosam.bam
     
    output: 6747_snippet_markduplicates.bam
 
    """
java -Xmx32G -jar picard.jar MarkDuplicates \
INPUT=6747_snippet.bam \ #specify multiple times to merge 
OUTPUT=6747_snippet_markduplicates.bam \
METRICS_FILE=6747_snippet_markduplicates_metrics.txt \ 
OPTICAL_DUPLICATE_PIXEL_DISTANCE=2500 \ #changed from default of 100
CREATE_INDEX=true \ #optional
TMP_DIR=/tmp
    """
}
 
/*
 * Base recallibration
 */
process baserecal { 

    input:
    
    output:
    
    """
    */ Code from slide show
    *java -jar GenomeAnalysisTK.jar \ 
    *-T BaseRecalibrator \ 
    *-R reference.fa \ 
    *-I input_reads.bam \ 
    *-L 20 \ 
    *-knownSites dbsnp.vcf \ 
    *-knownSites gold_indels.vcf \ 
    *-o recal_data.table 
    */
    
    */Code from GATK Base quality score recallibration (BQSR) Methods and algorithms
    *java -jar GenomeAnalysisTK.jar \
   *-T PrintReads \
   *-R reference.fasta \
   *-I input.bam \
   *-BQSR recalibration_report.grp \
   */-o output.bam
   
   */Tutorial
   */1. Analyze patterns of covariation in the sequence dataset
   java -jar GenomeAnalysisTK.jar \ 
    -T BaseRecalibrator \ 
    -R reference.fa \ 
    -I input_reads.bam \ 
    -L 20 \ 
    -knownSites dbsnp.vcf \ 
    -knownSites gold_indels.vcf \ 
    -o recal_data.table 
    */Note that -L 20 is used here and in the next steps to restrict analysis to only 
    *chromosome 20 in the b37 human genome reference build. To run against a different reference, 
    */you may need to change the name of the contig according to the nomenclature used in your reference.
    
    */2. Do a second pass to analyze covariation remaining after recalibration
    java -jar GenomeAnalysisTK.jar \ 
    -T BaseRecalibrator \ 
    -R reference.fa \ 
    -I input_reads.bam \ 
    -L 20 \ 
    -knownSites dbsnp.vcf \ 
    -knownSites gold_indels.vcf \ 
    -BQSR recal_data.table \ 
    -o post_recal_data.table
    
    */3. Generate before/after plots
    java -jar GenomeAnalysisTK.jar \ 
    -T AnalyzeCovariates \ 
    -R reference.fa \ 
    -L 20 \ 
    -before recal_data.table \
    -after post_recal_data.table \
    -plots recalibration_plots.pdf
    
    */4. Apply the recalibration to your sequence data
    java -jar GenomeAnalysisTK.jar \ 
    -T PrintReads \ 
    -R reference.fa \ 
    -I input_reads.bam \ 
    -L 20 \ 
    -BQSR recal_data.table \ 
    -o recal_reads.bam 
    """
    
}

/*
 * Var. Calling (HC -ERC GCVF)
 */
process varcal {
 
    input:
 
    output:
    raw_variants.vcf
    
    """
    --genotyping_mode
    -stand_emit_conf
    -stand_call_conf
    
    java -jar GenomeAnalysisTK.jar \ 
    -T HaplotypeCaller \ 
    -R reference.fa \ 
    -I preprocessed_reads.bam \  
    -L 20 \ 
    --genotyping_mode DISCOVERY \ 
    -stand_emit_conf 10 \ 
    -stand_call_conf 30 \ 
    -o raw_variants.vcf 
    
    java -jar GenomeAnalysisTK.jar 
    -T HaplotypeCaller 
    -R human_b37_20.fasta 
    -I recalibrated.bam 
    -o hc_variants.vcf 
    -bamout bamout.bam
    """

}

/*
 * Genotype likelihoods
 */
process genlike {
 
    input:

     
    output:

 
    """
    java -jar GenomeAnalysisToolkit.jar -R human_g1k_v37_decoy.fasta 
    -T CalculateGenotypePosteriors --supporting 1000G_phase3_v4_20130502.sites.vcf -ped trio.ped 
    -V recalibratedVariants.vcf -o recalibratedVariants.postCGP.vcf
    """
}


/*
 * Joint Genotyping
 */
process jointgentype {
  
  input:

     
    output:

 
    """

    """
}

/*
 * Filter Variants
 *https://software.broadinstitute.org/gatk/documentation/article?id=2805
 */
process filvar {
  
  input:

     
    output:

 
    """
    java -jar $GATKjar -T VariantFiltration 
    -R $bundlePath/b37/human_g1k_v37_decoy.fasta 
    -V recalibratedVariants.postCGP.vcf -G_filter "GQ < 20.0" 
    -G_filterName lowGQ -o recalibratedVariants.postCGP.Gfiltered.vcf
    
    *2. Build the SNP recalibration model

    java -jar GenomeAnalysisTK.jar \ 
    -T VariantRecalibrator \ 
    -R reference.fa \ 
    -input raw_variants.vcf \ 
    -resource:hapmap,known=false,training=true,truth=true,prior=15.0 hapmap.vcf \ 
    -resource:omni,known=false,training=true,truth=true,prior=12.0 omni.vcf \ 
    -resource:1000G,known=false,training=true,truth=false,prior=10.0 1000G.vcf \ 
    -resource:dbsnp,known=true,training=false,truth=false,prior=2.0 dbsnp.vcf \ 
    -an DP \ 
    -an QD \ 
    -an FS \ 
    -an SOR \ 
    -an MQ \
    -an MQRankSum \ 
    -an ReadPosRankSum \ 
    -an InbreedingCoeff \
    -mode SNP \ 
    -tranche 100.0 -tranche 99.9 -tranche 99.0 -tranche 90.0 \ 
    -recalFile recalibrate_SNP.recal \ 
    -tranchesFile recalibrate_SNP.tranches \ 
    -rscriptFile recalibrate_SNP_plots.R 
    
    *3. Apply the desired level of recalibration to the SNPs in the call set

    java -jar GenomeAnalysisTK.jar \ 
    -T ApplyRecalibration \ 
    -R reference.fa \ 
    -input raw_variants.vcf \ 
    -mode SNP \ 
    --ts_filter_level 99.0 \ 
    -recalFile recalibrate_SNP.recal \ 
    -tranchesFile recalibrate_SNP.tranches \ 
    -o recalibrated_snps_raw_indels.vcf 
    
    *5. Build the Indel recalibration model

    java -jar GenomeAnalysisTK.jar \ 
    -T VariantRecalibrator \ 
    -R reference.fa \ 
    -input recalibrated_snps_raw_indels.vcf \ 
    -resource:mills,known=false,training=true,truth=true,prior=12.0 Mills_and_1000G_gold_standard.indels.b37.sites.vcf \
    -resource:dbsnp,known=true,training=false,truth=false,prior=2.0 dbsnp.b37.vcf \
    -an QD \
    -an DP \ 
    -an FS \ 
    -an SOR \ 
    -an MQRankSum \ 
    -an ReadPosRankSum \ 
    -an InbreedingCoeff
    -mode INDEL \ 
    -tranche 100.0 -tranche 99.9 -tranche 99.0 -tranche 90.0 \ 
    --maxGaussians 4 \ 
    -recalFile recalibrate_INDEL.recal \ 
    -tranchesFile recalibrate_INDEL.tranches \ 
    -rscriptFile recalibrate_INDEL_plots.R
    
    *6. Apply the desired level of recalibration to the Indels in the call set
 
    java -jar GenomeAnalysisTK.jar \ 
    -T ApplyRecalibration \ 
    -R reference.fa \ 
    -input recalibrated_snps_raw_indels.vcf \ 
    -mode INDEL \ 
    --ts_filter_level 99.0 \ 
    -recalFile recalibrate_INDEL.recal \ 
    -tranchesFile recalibrate_INDEL.tranches \ 
    -o recalibrated_variants.vcf 
    """
}

/*
 * Refine genotypes
 */
process refgentype {
  
  input:

     
    output:

 
    """

    """
}

/*
 * Annotate variants
 */
process annovar {
  
  input:

     
    output:

 
    """
    java -jar $GATKjar -T VariantAnnotator 
    -R $bundlePath/b37/human_g1k_v37_decoy.fasta 
    -V recalibratedVariants.postCGP.Gfiltered.vcf 
    -A PossibleDeNovo -ped trio.ped 
    -o recalibratedVariants.postCGP.Gfiltered.deNovos.vcf
    """
}

/*
 * Evaluate callset
 */
process evalcall {
  
  input:

     
    output:

 
    """
    java -jar GenomeAnalysisTK.jar \
-T VariantEval \
-R reference.b37.fasta \
-eval SampleVariants.vcf \
-D dbsnp_138.b37.excluding_sites_after_129.vcf \
-noEV -EV CompOverlap -EV IndelSummary -EV TiTvVariantEvaluator -EV CountVariants -EV MultiallelicSummary \
-o SampleVariants_Evaluation.eval.grp
    """
}


